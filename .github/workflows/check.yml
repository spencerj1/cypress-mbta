name: QA checking code

on:
  push:
    branches-ignore:
      - master
      - staging
      - develop
  pull_request:

# For self-hosted
# jobs:
#   install:
#     runs-on: self-hosted
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v1
#       - name: Install yarn
#         run: yarn
#   check:
#     runs-on: self-hosted
#     needs: install
#     if: github.event_name == 'push'
#     steps:
#       - name: QA check
#         run: |
#           yarn lint:check
#           yarn prettier:check
#           yarn cypress:check
#       - name: Notification to slack
#         uses: 8398a7/action-slack@v2
#         with:
#           status: ${{ job.status }}
#           author_name: ${{ github.repository }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#         if: success() || failure()
#   danger:
#     runs-on: self-hosted
#     needs: install
#     if: github.event_name == 'pull_request'
#     steps:
#       - name: Install path bundle
#         run: bundle install --path vendor/bundle
#       - name: Execute danger
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |
#           bundle exec danger
#       - name: Approve pull request from release
#         uses: golfzaptw/action-auto-reviews-from-branches@master
#         with:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
#           EVENT_TYPE: 'APPROVE'
#           BRANCHES: 'release/*'
#           AUTHOR: dependabot-preview[bot]

# For server github action
jobs:
  check:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Get cache dependencies package.json
        uses: actions/cache@preview
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn
        run: |
          yarn
          yarn cypress install
      - name: QA check
        run: |
          yarn lint:check
          yarn prettier:check
          yarn cypress:check
      - name: Notification to slack
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: success() || failure()
  danger:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Get cache dependencies package.json
        uses: actions/cache@preview
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install yarn
        run: yarn
      - name: Execute danger
        run: |
          gem install bundler
          bundle install --path vendor/bundle
          bundle exec danger
      - name: Approve pull request from release
        uses: golfzaptw/action-auto-reviews-from-branches@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          EVENT_TYPE: 'APPROVE'
          BRANCHES: 'release/*'
          AUTHOR: dependabot-preview[bot]
          MESSAGE: 'Nice approve github bot üè≥Ô∏è‚Äçüåàüôè.'
